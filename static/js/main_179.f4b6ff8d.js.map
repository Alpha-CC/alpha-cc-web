{"version":3,"sources":["webpack://alpha-cc-web/./src/constants/piece.ts","webpack://alpha-cc-web/./src/components/board-item/index.tsx","webpack://alpha-cc-web/./src/constants/board.ts","webpack://alpha-cc-web/./src/utils/board.ts","webpack://alpha-cc-web/./src/constants/move.ts","webpack://alpha-cc-web/./src/utils/move.ts","webpack://alpha-cc-web/./src/utils/position.ts","webpack://alpha-cc-web/./src/app.tsx","webpack://alpha-cc-web/./src/index.tsx"],"names":["PieceType","Side","PieceToImg","KING","RED","redKing","BLACK","blackKing","ADVISOR","redAdvisor","blackAdvisor","ELEPHANT","redElephant","blackElephant","CHARIOT","redChariot","blackChariot","PAWN","redPawn","blackPawn","CANNON","redCannon","blackCannon","HORSE","redHorse","blackHorse","PieceM","BoardItem","pieceInfo","active","validMove","highlight","onClick","side","type","cx","e","stopPropagation","undefined","validMoveDot","Size","ROW","COL","initBlackPosition","pos","Bound","BOARD","BLACK_KING","RED_KING","initBoard","board","Array","from","length","opposite","id","piece","forEach","r","c","opR","opC","boardReducer","to","map","row","rowIdx","item","colIdx","Direction","filterOutOfBonud","positions","bound","filter","configureGetPos","F","B","L","R","LF","LB","RF","RB","common","res","tos","move","match","flatMap","step","temp","direction","parseInt","steps","i","push","curPos","valid","cond1","cond2","boardPiece","special","operation","newPos","newPiece","getValidMoves","position","getPos","result","isEqualPosition","p1","p2","initialBoard","App","useReducer","updateBoard","useState","activePiece","setActivePiece","activeSide","setActiveSide","moveHistory","setMoveHistroy","removeActivePiece","validMoves","isValidMove","some","handleMove","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main_179.f4b6ff8d.js","sourcesContent":["import redKing from '@/assets/images/pieces/red/king.png';\nimport redAdvisor from '@/assets/images/pieces/red/advisor.png';\nimport redElephant from '@/assets/images/pieces/red/elephant.png';\nimport redHorse from '@/assets/images/pieces/red/horse.png';\nimport redChariot from '@/assets/images/pieces/red/chariot.png';\nimport redCannon from '@/assets/images/pieces/red/cannon.png';\nimport redPawn from '@/assets/images/pieces/red/pawn.png';\nimport blackKing from '@/assets/images/pieces/black/king.png';\nimport blackAdvisor from '@/assets/images/pieces/black/advisor.png';\nimport blackElephant from '@/assets/images/pieces/black/elephant.png';\nimport blackHorse from '@/assets/images/pieces/black/horse.png';\nimport blackChariot from '@/assets/images/pieces/black/chariot.png';\nimport blackPawn from '@/assets/images/pieces/black/pawn.png';\nimport blackCannon from '@/assets/images/pieces/black/cannon.png';\n\nexport enum PieceType {\n  KING,\n  ADVISOR,\n  ELEPHANT,\n  HORSE,\n  CHARIOT,\n  CANNON,\n  PAWN,\n}\n\nexport enum Side {\n  RED,\n  BLACK,\n}\n\nexport const PieceToImg: Record<\n  PieceType,\n  { [Side.RED]: string; [Side.BLACK]: string }\n> = {\n  [PieceType.KING]: {\n    [Side.RED]: redKing,\n    [Side.BLACK]: blackKing,\n  },\n  [PieceType.ADVISOR]: {\n    [Side.RED]: redAdvisor,\n    [Side.BLACK]: blackAdvisor,\n  },\n  [PieceType.ELEPHANT]: {\n    [Side.RED]: redElephant,\n    [Side.BLACK]: blackElephant,\n  },\n  [PieceType.CHARIOT]: {\n    [Side.RED]: redChariot,\n    [Side.BLACK]: blackChariot,\n  },\n  [PieceType.PAWN]: {\n    [Side.RED]: redPawn,\n    [Side.BLACK]: blackPawn,\n  },\n  [PieceType.CANNON]: {\n    [Side.RED]: redCannon,\n    [Side.BLACK]: blackCannon,\n  },\n  [PieceType.HORSE]: {\n    [Side.RED]: redHorse,\n    [Side.BLACK]: blackHorse,\n  },\n};\n\nexport const PieceM: Record<\n  PieceType,\n  { [Side.RED]: string; [Side.BLACK]: string }\n> = {\n  [PieceType.KING]: {\n    [Side.RED]: redKing,\n    [Side.BLACK]: blackKing,\n  },\n  [PieceType.ADVISOR]: {\n    [Side.RED]: redAdvisor,\n    [Side.BLACK]: blackAdvisor,\n  },\n  [PieceType.ELEPHANT]: {\n    [Side.RED]: redElephant,\n    [Side.BLACK]: blackElephant,\n  },\n  [PieceType.CHARIOT]: {\n    [Side.RED]: redChariot,\n    [Side.BLACK]: blackChariot,\n  },\n  [PieceType.PAWN]: {\n    [Side.RED]: redPawn,\n    [Side.BLACK]: blackPawn,\n  },\n  [PieceType.CANNON]: {\n    [Side.RED]: redCannon,\n    [Side.BLACK]: blackCannon,\n  },\n  [PieceType.HORSE]: {\n    [Side.RED]: redHorse,\n    [Side.BLACK]: blackHorse,\n  },\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport validMoveDot from '@/assets/images/overlay/valid-move-dot.png';\nimport { Piece } from '@/types/piece';\nimport { PieceToImg, Side } from '@/constants/piece';\n\nimport './index.less';\n\ninterface Props {\n  pieceInfo: Piece | null;\n  active: boolean;\n  validMove: boolean;\n  highlight: Side | null;\n  onClick: () => void;\n}\n\nconst BoardItem: React.FC<Props> = ({\n  pieceInfo,\n  active,\n  validMove,\n  highlight,\n  onClick,\n}) => {\n  const { side, type } = pieceInfo ?? {};\n\n  return (\n    <div\n      className={cx(\n        'piece',\n        { 'piece--active': active },\n        { 'piece--red': highlight === Side.RED },\n        { 'piece--black': highlight === Side.BLACK },\n      )}\n      onClick={e => {\n        e.stopPropagation();\n        onClick();\n      }}\n    >\n      {type !== undefined && side !== undefined && (\n        <img\n          draggable=\"false\"\n          alt=\"chinese chess piece\"\n          src={PieceToImg[type][side]}\n        />\n      )}\n      <img\n        className={cx('valid-move', { 'valid-move--hidden': !validMove })}\n        alt=\"valid move\"\n        src={validMoveDot}\n      />\n    </div>\n  );\n};\n\nexport default BoardItem;\n","import { PieceType } from '@/constants/piece';\nimport { Position } from '@/types/board';\n\nexport const Size = {\n  ROW: 10,\n  COL: 9,\n};\n\nexport const initBlackPosition = [\n  {\n    type: PieceType.CHARIOT,\n    pos: [\n      [0, 0],\n      [0, 8],\n    ],\n  },\n  {\n    type: PieceType.HORSE,\n    pos: [\n      [0, 1],\n      [0, 7],\n    ],\n  },\n  {\n    type: PieceType.ELEPHANT,\n    pos: [\n      [0, 2],\n      [0, 6],\n    ],\n  },\n  {\n    type: PieceType.ADVISOR,\n    pos: [\n      [0, 3],\n      [0, 5],\n    ],\n  },\n  { type: PieceType.KING, pos: [[0, 4]] },\n  {\n    type: PieceType.CANNON,\n    pos: [\n      [2, 1],\n      [2, 7],\n    ],\n  },\n  {\n    type: PieceType.PAWN,\n    pos: [\n      [3, 0],\n      [3, 2],\n      [3, 4],\n      [3, 6],\n      [3, 8],\n    ],\n  },\n];\n\nexport const Bound: Record<string, [Position, Position]> = {\n  BOARD: [\n    [0, 0],\n    [Size.ROW - 1, Size.COL - 1],\n  ],\n  BLACK: [\n    [0, 0],\n    [4, 8],\n  ],\n  BLACK_KING: [\n    [0, 3],\n    [2, 5],\n  ],\n  RED: [\n    [5, 0],\n    [Size.ROW - 1, Size.COL - 1],\n  ],\n  RED_KING: [\n    [7, 3],\n    [Size.ROW - 1, 5],\n  ],\n};\n","import { initBlackPosition, Size } from '@/constants/board';\nimport { Side } from '@/constants/piece';\nimport { Board, BoardReducer } from '@/types/board';\nimport { Piece } from '@/types/piece';\n\nexport const initBoard = (): Board => {\n  const board: Board = Array.from<undefined, Array<Piece | null>>(\n    { length: Size.ROW },\n    () => Array.from<undefined, Piece | null>({ length: Size.COL }, () => null),\n  );\n  const opposite = (pos: number[]) => [\n    Size.ROW - 1 - pos[0],\n    Size.COL - 1 - pos[1],\n  ];\n  let id = 0;\n  initBlackPosition.forEach(piece => {\n    piece.pos.forEach(pos => {\n      const [r, c] = pos;\n      board[r][c] = { id, side: Side.BLACK, type: piece.type };\n      const [opR, opC] = opposite(pos);\n      board[opR][opC] = { id: 31 - id, side: Side.RED, type: piece.type };\n      id += 1;\n    });\n  });\n  return board;\n};\n\nexport const boardReducer: BoardReducer = (board, pos) => {\n  const { from, to } = pos;\n  return board.map((row, rowIdx) =>\n    row.map((item, colIdx) => {\n      if (rowIdx === from[0] && colIdx === from[1]) {\n        return null;\n      }\n      if (rowIdx === to[0] && colIdx === to[1]) {\n        return board[from[0]][from[1]];\n      }\n      return item;\n    }),\n  );\n};\n","export enum Direction {\n  F,\n  B,\n  L,\n  R,\n  LF,\n  LB,\n  RF,\n  RB,\n}\n","import { Bound } from '@/constants/board';\nimport { Direction } from '@/constants/move';\nimport { PieceType, Side } from '@/constants/piece';\nimport { Board, Position } from '@/types/board';\nimport { Piece } from '@/types/piece';\n\nexport const filterOutOfBonud = (\n  positions: Array<Position>,\n  bound: [Position, Position],\n): Array<Position> =>\n  positions.filter(\n    pos =>\n      pos[0] >= bound[0][0] &&\n      pos[0] <= bound[1][0] &&\n      pos[1] >= bound[0][1] &&\n      pos[1] <= bound[1][1],\n  );\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const configureGetPos = (board: Board, side: Side, from: Position) => {\n  const { F, B, L, R, LF, LB, RF, RB } = Direction;\n  const common = (\n    bound: [Position, Position],\n    ...tos: string[]\n  ): Array<Position> => {\n    const res: Array<Position> = [];\n    tos.forEach(to => {\n      const move = to.match(/.{2}/g)?.flatMap(step => {\n        const temp = [];\n        const direction = parseInt(step[0], 10) as Direction;\n        const steps = parseInt(step[1], 10);\n        for (let i = 0; i < steps; i += 1) {\n          temp.push({ direction, steps: 1 });\n        }\n        return temp;\n      });\n      if (!move) {\n        return;\n      }\n      let curPos: Position = [from[0], from[1]];\n      let valid = true;\n      for (let i = 0; i < move.length; i += 1) {\n        const { direction, steps } = move[i];\n        let pos: Position = [0, 0];\n        if (direction === F || direction === B) {\n          const cond1 = direction === F;\n          const cond2 = side === Side.RED;\n          pos = [curPos[0] + (cond1 !== cond2 ? steps : -steps), curPos[1]];\n        } else if (direction === L || direction === R) {\n          const cond1 = direction === L;\n          const cond2 = side === Side.RED;\n          pos = [curPos[0], curPos[1] + (cond1 !== cond2 ? steps : -steps)];\n        } else if (direction === LF || direction === RB) {\n          const cond1 = direction === LF;\n          const cond2 = side === Side.RED;\n          pos = [\n            curPos[0] + (cond1 !== cond2 ? steps : -steps),\n            curPos[1] + (cond1 !== cond2 ? steps : -steps),\n          ];\n        } else if (direction === LB || direction === RF) {\n          const cond1 = direction === LB;\n          const cond2 = side === Side.RED;\n          pos = [\n            curPos[0] + (cond1 !== cond2 ? -steps : steps),\n            curPos[1] + (cond1 !== cond2 ? steps : -steps),\n          ];\n        }\n        const boardPiece = board[pos[0]] ? board[pos[0]][pos[1]] : null;\n        if (i === move.length - 1) {\n          if (boardPiece && boardPiece.side === side) {\n            valid = false;\n            break;\n          }\n        } else if (boardPiece) {\n          valid = false;\n          break;\n        }\n\n        curPos = pos;\n      }\n      if (valid) res.push(curPos);\n    });\n    return filterOutOfBonud(res, bound).filter(pos => {\n      const piece = board[pos[0]][pos[1]];\n      return !piece || piece.side !== side;\n    });\n  };\n  const special = (type: PieceType.CANNON | PieceType.CHARIOT) => {\n    const res: Array<Position> = [];\n    [F, B, L, R].forEach(direction => {\n      let curPos: Position = [from[0], from[1]];\n      let operation: [number, number] = [0, 0];\n      if (direction === F) {\n        operation = [side === Side.RED ? -1 : 1, 0];\n      } else if (direction === B) {\n        operation = [side === Side.RED ? 1 : -1, 0];\n      } else if (direction === L) {\n        operation = [0, side === Side.RED ? -1 : 1];\n      } else if (direction === R) {\n        operation = [0, side === Side.RED ? 1 : -1];\n      }\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        const pos: Position = [\n          curPos[0] + operation[0],\n          curPos[1] + operation[1],\n        ];\n        curPos = pos;\n        if (filterOutOfBonud([pos], Bound.BOARD).length > 0) {\n          const piece = board[pos[0]][pos[1]];\n          if (piece) {\n            if (type === PieceType.CHARIOT) {\n              if (side !== piece.side) res.push(pos);\n            } else if (type === PieceType.CANNON) {\n              // eslint-disable-next-line no-constant-condition\n              while (true) {\n                const newPos: Position = [\n                  curPos[0] + operation[0],\n                  curPos[1] + operation[1],\n                ];\n                curPos = newPos;\n                if (filterOutOfBonud([newPos], Bound.BOARD).length > 0) {\n                  const newPiece = board[newPos[0]][newPos[1]];\n                  if (newPiece) {\n                    if (side !== newPiece.side) res.push(newPos);\n                    break;\n                  }\n                } else {\n                  break;\n                }\n              }\n            }\n            break;\n          }\n          res.push(pos);\n        } else {\n          break;\n        }\n      }\n    });\n    return res;\n  };\n  return { common, special };\n};\n\nexport const getValidMoves = (\n  board: Board,\n  position: Position,\n  piece: Piece | null,\n): Array<Position> => {\n  if (!piece) {\n    return [];\n  }\n  const getPos = configureGetPos(board, piece.side, position);\n  const result: Array<Position> = [];\n  const { F, B, L, R, LF, LB, RF, RB } = Direction;\n  switch (piece.type) {\n    case PieceType.PAWN:\n      if (\n        (piece.side === Side.RED && position[0] > 4) ||\n        (piece.side === Side.BLACK && position[0] <= 4)\n      ) {\n        // not crossed river\n        return getPos.common(Bound.BOARD, `${F}1`);\n      }\n      // crossed river\n      return getPos.common(Bound.BOARD, `${F}1`, `${L}1`, `${R}1`);\n\n    case PieceType.ELEPHANT:\n      return getPos.common(\n        piece.side === Side.RED ? Bound.RED : Bound.BLACK,\n        `${LF}2`,\n        `${LB}2`,\n        `${RF}2`,\n        `${RB}2`,\n      );\n\n    case PieceType.ADVISOR:\n      return getPos.common(\n        piece.side === Side.RED ? Bound.RED_KING : Bound.BLACK_KING,\n        `${LF}1`,\n        `${LB}1`,\n        `${RF}1`,\n        `${RB}1`,\n      );\n\n    case PieceType.KING:\n      return getPos.common(\n        piece.side === Side.RED ? Bound.RED_KING : Bound.BLACK_KING,\n        `${F}1`,\n        `${B}1`,\n        `${L}1`,\n        `${R}1`,\n      );\n    case PieceType.HORSE:\n      return getPos.common(\n        Bound.BOARD,\n        `${F}1${LF}1`,\n        `${F}1${RF}1`,\n        `${L}1${LF}1`,\n        `${L}1${LB}1`,\n        `${B}1${LB}1`,\n        `${B}1${RB}1`,\n        `${R}1${RF}1`,\n        `${R}1${RB}1`,\n      );\n    case PieceType.CHARIOT:\n      return getPos.special(piece.type);\n    case PieceType.CANNON:\n      return getPos.special(piece.type);\n    default:\n      break;\n  }\n  return result;\n};\n","import { Position } from '@/types/board';\n\nexport const isEqualPosition = (p1: Position, p2: Position): boolean =>\n  p1[0] === p2[0] && p1[1] === p2[1];\n","import React, { useReducer, useState } from 'react';\nimport BoardItem from '@/components/board-item';\nimport { Size } from '@/constants/board';\nimport { boardReducer, initBoard } from '@/utils/board';\nimport { getValidMoves } from '@/utils/move';\nimport { isEqualPosition } from '@/utils/position';\nimport type { BoardReducer, MoveHistory, Position } from '@/types/board';\n\nimport './app.less';\nimport { Side } from './constants/piece';\n\nconst initialBoard = initBoard();\nconst App: React.FC<Record<string, never>> = () => {\n  const [board, updateBoard] = useReducer<BoardReducer>(\n    boardReducer,\n    initialBoard,\n  );\n  const [activePiece, setActivePiece] = useState<Position | null>(null);\n  const [activeSide, setActiveSide] = useState<Side>(Side.RED);\n  const [moveHistory, setMoveHistroy] = useState<MoveHistory>([]);\n\n  const removeActivePiece = () => {\n    setActivePiece(null);\n  };\n\n  const validMoves = activePiece\n    ? getValidMoves(board, activePiece, board[activePiece[0]][activePiece[1]])\n    : [];\n\n  const isValidMove = (rowIdx: number, colIdx: number) =>\n    validMoves.some(\n      validMove => validMove[0] === rowIdx && validMove[1] === colIdx,\n    );\n\n  const handleMove = (rowIdx: number, colIdx: number) => {\n    if (activePiece) {\n      updateBoard({ from: activePiece, to: [rowIdx, colIdx] });\n      setMoveHistroy([\n        ...moveHistory,\n        {\n          side: activeSide,\n          from: activePiece,\n          to: [rowIdx, colIdx],\n        },\n      ]);\n      removeActivePiece();\n      setActiveSide(side => (side === Side.BLACK ? Side.RED : Side.BLACK));\n    }\n  };\n\n  return (\n    <div className=\"app\" onClick={removeActivePiece}>\n      <div className=\"board\">\n        <div className=\"board__background\" />\n        <div className=\"board__grid\">\n          {board.map((row, rowIdx) =>\n            row.map((item, colIdx) => (\n              <BoardItem\n                // eslint-disable-next-line react/no-array-index-key\n                key={rowIdx * Size.ROW + colIdx}\n                pieceInfo={item}\n                active={\n                  !!activePiece &&\n                  isEqualPosition(activePiece, [rowIdx, colIdx])\n                }\n                validMove={isValidMove(rowIdx, colIdx)}\n                highlight={\n                  moveHistory.length > 0 &&\n                  (isEqualPosition(moveHistory[moveHistory.length - 1].from, [\n                    rowIdx,\n                    colIdx,\n                  ]) ||\n                    isEqualPosition(moveHistory[moveHistory.length - 1].to, [\n                      rowIdx,\n                      colIdx,\n                    ]))\n                    ? moveHistory[moveHistory.length - 1].side\n                    : null\n                }\n                onClick={() => {\n                  if (isValidMove(rowIdx, colIdx)) {\n                    handleMove(rowIdx, colIdx);\n                  } else if (item?.side === activeSide) {\n                    setActivePiece([rowIdx, colIdx]);\n                  } else {\n                    removeActivePiece();\n                  }\n                }}\n              />\n            )),\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}