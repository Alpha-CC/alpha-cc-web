{"version":3,"sources":["webpack://alpha-cc-web/./src/constants/piece.ts","webpack://alpha-cc-web/./src/constants/board.ts","webpack://alpha-cc-web/./src/utils/board.ts","webpack://alpha-cc-web/./src/components/board-item/index.tsx","webpack://alpha-cc-web/./src/utils/position.ts","webpack://alpha-cc-web/./src/constants/move.ts","webpack://alpha-cc-web/./src/utils/move.ts","webpack://alpha-cc-web/./src/utils/game.ts","webpack://alpha-cc-web/./src/components/board/index.tsx","webpack://alpha-cc-web/./src/app.tsx","webpack://alpha-cc-web/./src/index.tsx"],"names":["PieceType","Side","PieceToImg","KING","RED","redKing","BLACK","blackKing","ADVISOR","redAdvisor","blackAdvisor","ELEPHANT","redElephant","blackElephant","CHARIOT","redChariot","blackChariot","PAWN","redPawn","blackPawn","CANNON","redCannon","blackCannon","HORSE","redHorse","blackHorse","PieceM","Size","ROW","COL","initBlackPosition","type","pos","Bound","BOARD","BLACK_KING","RED_KING","initBoard","board","Array","from","length","opposite","id","piece","forEach","r","c","side","opR","opC","boardReducer","to","map","row","rowIdx","item","colIdx","BoardItem","pieceInfo","active","validMove","highlight","onClick","cx","e","stopPropagation","undefined","validMoveDot","isEqualPosition","p1","p2","Direction","filterOutOfBonud","positions","bound","filter","configureGetPos","F","B","L","R","LF","LB","RF","RB","common","res","tos","move","match","flatMap","step","temp","direction","parseInt","steps","i","push","curPos","valid","cond1","cond2","boardPiece","special","operation","newPos","newPiece","kingKill","column","kingIdx","findIndex","Math","min","max","getValidMoves","position","getPos","result","checkmate","king","some","validMoves","win","newBoard","initialBoard","CCBoard","props","activePiece","setActivePiece","useState","setBoard","activeSide","setActiveSide","moveHistory","setMoveHistroy","isCheckmate","setIsCheckmate","removeActivePiece","useMemo","JSON","stringify","isValidMove","handleMove","alert","reset","useEffect","setTimeout","App","console","log","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main_179.dd783e24.js","sourcesContent":["import redKing from '@/assets/images/pieces/red/king.png';\nimport redAdvisor from '@/assets/images/pieces/red/advisor.png';\nimport redElephant from '@/assets/images/pieces/red/elephant.png';\nimport redHorse from '@/assets/images/pieces/red/horse.png';\nimport redChariot from '@/assets/images/pieces/red/chariot.png';\nimport redCannon from '@/assets/images/pieces/red/cannon.png';\nimport redPawn from '@/assets/images/pieces/red/pawn.png';\nimport blackKing from '@/assets/images/pieces/black/king.png';\nimport blackAdvisor from '@/assets/images/pieces/black/advisor.png';\nimport blackElephant from '@/assets/images/pieces/black/elephant.png';\nimport blackHorse from '@/assets/images/pieces/black/horse.png';\nimport blackChariot from '@/assets/images/pieces/black/chariot.png';\nimport blackPawn from '@/assets/images/pieces/black/pawn.png';\nimport blackCannon from '@/assets/images/pieces/black/cannon.png';\n\nexport enum PieceType {\n  KING,\n  ADVISOR,\n  ELEPHANT,\n  HORSE,\n  CHARIOT,\n  CANNON,\n  PAWN,\n}\n\nexport enum Side {\n  RED,\n  BLACK,\n}\n\nexport const PieceToImg: Record<\n  PieceType,\n  { [Side.RED]: string; [Side.BLACK]: string }\n> = {\n  [PieceType.KING]: {\n    [Side.RED]: redKing,\n    [Side.BLACK]: blackKing,\n  },\n  [PieceType.ADVISOR]: {\n    [Side.RED]: redAdvisor,\n    [Side.BLACK]: blackAdvisor,\n  },\n  [PieceType.ELEPHANT]: {\n    [Side.RED]: redElephant,\n    [Side.BLACK]: blackElephant,\n  },\n  [PieceType.CHARIOT]: {\n    [Side.RED]: redChariot,\n    [Side.BLACK]: blackChariot,\n  },\n  [PieceType.PAWN]: {\n    [Side.RED]: redPawn,\n    [Side.BLACK]: blackPawn,\n  },\n  [PieceType.CANNON]: {\n    [Side.RED]: redCannon,\n    [Side.BLACK]: blackCannon,\n  },\n  [PieceType.HORSE]: {\n    [Side.RED]: redHorse,\n    [Side.BLACK]: blackHorse,\n  },\n};\n\nexport const PieceM: Record<\n  PieceType,\n  { [Side.RED]: string; [Side.BLACK]: string }\n> = {\n  [PieceType.KING]: {\n    [Side.RED]: redKing,\n    [Side.BLACK]: blackKing,\n  },\n  [PieceType.ADVISOR]: {\n    [Side.RED]: redAdvisor,\n    [Side.BLACK]: blackAdvisor,\n  },\n  [PieceType.ELEPHANT]: {\n    [Side.RED]: redElephant,\n    [Side.BLACK]: blackElephant,\n  },\n  [PieceType.CHARIOT]: {\n    [Side.RED]: redChariot,\n    [Side.BLACK]: blackChariot,\n  },\n  [PieceType.PAWN]: {\n    [Side.RED]: redPawn,\n    [Side.BLACK]: blackPawn,\n  },\n  [PieceType.CANNON]: {\n    [Side.RED]: redCannon,\n    [Side.BLACK]: blackCannon,\n  },\n  [PieceType.HORSE]: {\n    [Side.RED]: redHorse,\n    [Side.BLACK]: blackHorse,\n  },\n};\n","import { PieceType } from '@/constants/piece';\nimport { Position } from '@/types/board';\n\nexport const Size = {\n  ROW: 10,\n  COL: 9,\n};\n\nexport const initBlackPosition = [\n  {\n    type: PieceType.CHARIOT,\n    pos: [\n      [0, 0],\n      [0, 8],\n    ],\n  },\n  {\n    type: PieceType.HORSE,\n    pos: [\n      [0, 1],\n      [0, 7],\n    ],\n  },\n  {\n    type: PieceType.ELEPHANT,\n    pos: [\n      [0, 2],\n      [0, 6],\n    ],\n  },\n  {\n    type: PieceType.ADVISOR,\n    pos: [\n      [0, 3],\n      [0, 5],\n    ],\n  },\n  { type: PieceType.KING, pos: [[0, 4]] },\n  {\n    type: PieceType.CANNON,\n    pos: [\n      [2, 1],\n      [2, 7],\n    ],\n  },\n  {\n    type: PieceType.PAWN,\n    pos: [\n      [3, 0],\n      [3, 2],\n      [3, 4],\n      [3, 6],\n      [3, 8],\n    ],\n  },\n];\n\nexport const Bound: Record<string, [Position, Position]> = {\n  BOARD: [\n    [0, 0],\n    [Size.ROW - 1, Size.COL - 1],\n  ],\n  BLACK: [\n    [0, 0],\n    [4, 8],\n  ],\n  BLACK_KING: [\n    [0, 3],\n    [2, 5],\n  ],\n  RED: [\n    [5, 0],\n    [Size.ROW - 1, Size.COL - 1],\n  ],\n  RED_KING: [\n    [7, 3],\n    [Size.ROW - 1, 5],\n  ],\n};\n","import { initBlackPosition, Size } from '@/constants/board';\nimport { Side } from '@/constants/piece';\nimport { Board, BoardReducer } from '@/types/board';\nimport { Piece } from '@/types/piece';\n\nexport const initBoard = (): Board => {\n  const board: Board = Array.from<undefined, Array<Piece | null>>(\n    { length: Size.ROW },\n    () => Array.from<undefined, Piece | null>({ length: Size.COL }, () => null),\n  );\n  const opposite = (pos: number[]) => [\n    Size.ROW - 1 - pos[0],\n    Size.COL - 1 - pos[1],\n  ];\n  let id = 0;\n  initBlackPosition.forEach(piece => {\n    piece.pos.forEach(pos => {\n      const [r, c] = pos;\n      board[r][c] = { id, side: Side.BLACK, type: piece.type };\n      const [opR, opC] = opposite(pos);\n      board[opR][opC] = { id: 31 - id, side: Side.RED, type: piece.type };\n      id += 1;\n    });\n  });\n  return board;\n};\n\nexport const boardReducer: BoardReducer = (board, pos) => {\n  const { from, to } = pos;\n  return board.map((row, rowIdx) =>\n    row.map((item, colIdx) => {\n      if (rowIdx === from[0] && colIdx === from[1]) {\n        return null;\n      }\n      if (rowIdx === to[0] && colIdx === to[1]) {\n        return board[from[0]][from[1]];\n      }\n      return item;\n    }),\n  );\n};\n","import React from 'react';\nimport cx from 'classnames';\nimport validMoveDot from '@/assets/images/overlay/valid-move-dot.png';\nimport { Piece } from '@/types/piece';\nimport { PieceToImg, Side } from '@/constants/piece';\n\nimport './index.less';\n\ninterface Props {\n  pieceInfo: Piece | null;\n  active: boolean;\n  validMove: boolean;\n  highlight: Side | null;\n  onClick: () => void;\n}\n\nconst BoardItem: React.FC<Props> = ({\n  pieceInfo,\n  active,\n  validMove,\n  highlight,\n  onClick,\n}) => {\n  const { side, type } = pieceInfo ?? {};\n\n  return (\n    <div\n      className={cx(\n        'piece',\n        { 'piece--active': active },\n        { 'piece--red': highlight === Side.RED },\n        { 'piece--black': highlight === Side.BLACK },\n      )}\n      onClick={e => {\n        e.stopPropagation();\n        onClick();\n      }}\n    >\n      {type !== undefined && side !== undefined && (\n        <img\n          draggable=\"false\"\n          alt=\"chinese chess piece\"\n          src={PieceToImg[type][side]}\n        />\n      )}\n      <img\n        className={cx('valid-move', { 'valid-move--hidden': !validMove })}\n        alt=\"valid move\"\n        src={validMoveDot}\n      />\n    </div>\n  );\n};\n\nexport default BoardItem;\n","import { Position } from '@/types/board';\n\nexport const isEqualPosition = (p1: Position, p2: Position): boolean =>\n  p1[0] === p2[0] && p1[1] === p2[1];\n","export enum Direction {\n  F,\n  B,\n  L,\n  R,\n  LF,\n  LB,\n  RF,\n  RB,\n}\n","import { Bound } from '@/constants/board';\nimport { Direction } from '@/constants/move';\nimport { PieceType, Side } from '@/constants/piece';\nimport { Board, Position } from '@/types/board';\nimport { Piece } from '@/types/piece';\n\nexport const filterOutOfBonud = (\n  positions: Array<Position>,\n  bound: [Position, Position],\n): Array<Position> =>\n  positions.filter(\n    pos =>\n      pos[0] >= bound[0][0] &&\n      pos[0] <= bound[1][0] &&\n      pos[1] >= bound[0][1] &&\n      pos[1] <= bound[1][1],\n  );\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const configureGetPos = (board: Board, side: Side, from: Position) => {\n  const { F, B, L, R, LF, LB, RF, RB } = Direction;\n  const common = (\n    bound: [Position, Position],\n    ...tos: string[]\n  ): Array<Position> => {\n    const res: Array<Position> = [];\n    tos.forEach(to => {\n      const move = to.match(/.{2}/g)?.flatMap(step => {\n        const temp = [];\n        const direction = parseInt(step[0], 10) as Direction;\n        const steps = parseInt(step[1], 10);\n        for (let i = 0; i < steps; i += 1) {\n          temp.push({ direction, steps: 1 });\n        }\n        return temp;\n      });\n      if (!move) {\n        return;\n      }\n      let curPos: Position = [from[0], from[1]];\n      let valid = true;\n      for (let i = 0; i < move.length; i += 1) {\n        const { direction, steps } = move[i];\n        let pos: Position = [0, 0];\n        if (direction === F || direction === B) {\n          const cond1 = direction === F;\n          const cond2 = side === Side.RED;\n          pos = [curPos[0] + (cond1 !== cond2 ? steps : -steps), curPos[1]];\n        } else if (direction === L || direction === R) {\n          const cond1 = direction === L;\n          const cond2 = side === Side.RED;\n          pos = [curPos[0], curPos[1] + (cond1 !== cond2 ? steps : -steps)];\n        } else if (direction === LF || direction === RB) {\n          const cond1 = direction === LF;\n          const cond2 = side === Side.RED;\n          pos = [\n            curPos[0] + (cond1 !== cond2 ? steps : -steps),\n            curPos[1] + (cond1 !== cond2 ? steps : -steps),\n          ];\n        } else if (direction === LB || direction === RF) {\n          const cond1 = direction === LB;\n          const cond2 = side === Side.RED;\n          pos = [\n            curPos[0] + (cond1 !== cond2 ? -steps : steps),\n            curPos[1] + (cond1 !== cond2 ? steps : -steps),\n          ];\n        }\n        const boardPiece = board[pos[0]] ? board[pos[0]][pos[1]] : null;\n        if (i === move.length - 1) {\n          if (boardPiece && boardPiece.side === side) {\n            valid = false;\n            break;\n          }\n        } else if (boardPiece) {\n          valid = false;\n          break;\n        }\n\n        curPos = pos;\n      }\n      if (valid) res.push(curPos);\n    });\n    return filterOutOfBonud(res, bound).filter(pos => {\n      const piece = board[pos[0]][pos[1]];\n      return !piece || piece.side !== side;\n    });\n  };\n  const special = (type: PieceType.CANNON | PieceType.CHARIOT) => {\n    const res: Array<Position> = [];\n    [F, B, L, R].forEach(direction => {\n      let curPos: Position = [from[0], from[1]];\n      let operation: [number, number] = [0, 0];\n      if (direction === F) {\n        operation = [side === Side.RED ? -1 : 1, 0];\n      } else if (direction === B) {\n        operation = [side === Side.RED ? 1 : -1, 0];\n      } else if (direction === L) {\n        operation = [0, side === Side.RED ? -1 : 1];\n      } else if (direction === R) {\n        operation = [0, side === Side.RED ? 1 : -1];\n      }\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        const pos: Position = [\n          curPos[0] + operation[0],\n          curPos[1] + operation[1],\n        ];\n        curPos = pos;\n        if (filterOutOfBonud([pos], Bound.BOARD).length > 0) {\n          const piece = board[pos[0]][pos[1]];\n          if (piece) {\n            if (type === PieceType.CHARIOT) {\n              if (side !== piece.side) res.push(pos);\n            } else if (type === PieceType.CANNON) {\n              // eslint-disable-next-line no-constant-condition\n              while (true) {\n                const newPos: Position = [\n                  curPos[0] + operation[0],\n                  curPos[1] + operation[1],\n                ];\n                curPos = newPos;\n                if (filterOutOfBonud([newPos], Bound.BOARD).length > 0) {\n                  const newPiece = board[newPos[0]][newPos[1]];\n                  if (newPiece) {\n                    if (side !== newPiece.side) res.push(newPos);\n                    break;\n                  }\n                } else {\n                  break;\n                }\n              }\n            }\n            break;\n          }\n          res.push(pos);\n        } else {\n          break;\n        }\n      }\n    });\n    return res;\n  };\n  const kingKill = (): Array<Position> => {\n    const column: Array<Piece | null> = [];\n    board.forEach(row =>\n      row.forEach((item, colIdx) => {\n        if (colIdx === from[1]) {\n          column.push(item);\n        }\n      }),\n    );\n    const kingIdx = column.findIndex(\n      item => item && item.type === PieceType.KING && item.side !== side,\n    );\n    if (kingIdx >= 0) {\n      for (\n        let i = Math.min(from[0], kingIdx) + 1;\n        i < Math.max(from[0], kingIdx);\n        i += 1\n      ) {\n        if (column[i]) {\n          return [];\n        }\n      }\n      return [[kingIdx, from[1]]];\n    }\n    return [];\n  };\n  return { common, special, kingKill };\n};\n\nexport const getValidMoves = (\n  board: Board,\n  position: Position,\n  piece: Piece | null,\n): Array<Position> => {\n  if (!piece) {\n    return [];\n  }\n  const getPos = configureGetPos(board, piece.side, position);\n  const result: Array<Position> = [];\n  const { F, B, L, R, LF, LB, RF, RB } = Direction;\n  switch (piece.type) {\n    case PieceType.PAWN:\n      if (\n        (piece.side === Side.RED && position[0] > 4) ||\n        (piece.side === Side.BLACK && position[0] <= 4)\n      ) {\n        // not crossed river\n        return getPos.common(Bound.BOARD, `${F}1`);\n      }\n      // crossed river\n      return getPos.common(Bound.BOARD, `${F}1`, `${L}1`, `${R}1`);\n\n    case PieceType.ELEPHANT:\n      return getPos.common(\n        piece.side === Side.RED ? Bound.RED : Bound.BLACK,\n        `${LF}2`,\n        `${LB}2`,\n        `${RF}2`,\n        `${RB}2`,\n      );\n\n    case PieceType.ADVISOR:\n      return getPos.common(\n        piece.side === Side.RED ? Bound.RED_KING : Bound.BLACK_KING,\n        `${LF}1`,\n        `${LB}1`,\n        `${RF}1`,\n        `${RB}1`,\n      );\n\n    case PieceType.KING:\n      return [\n        ...getPos.common(\n          piece.side === Side.RED ? Bound.RED_KING : Bound.BLACK_KING,\n          `${F}1`,\n          `${B}1`,\n          `${L}1`,\n          `${R}1`,\n        ),\n        ...getPos.kingKill(),\n      ];\n    case PieceType.HORSE:\n      return getPos.common(\n        Bound.BOARD,\n        `${F}1${LF}1`,\n        `${F}1${RF}1`,\n        `${L}1${LF}1`,\n        `${L}1${LB}1`,\n        `${B}1${LB}1`,\n        `${B}1${RB}1`,\n        `${R}1${RF}1`,\n        `${R}1${RB}1`,\n      );\n    case PieceType.CHARIOT:\n      return getPos.special(piece.type);\n    case PieceType.CANNON:\n      return getPos.special(piece.type);\n    default:\n      break;\n  }\n  return result;\n};\n","import { PieceType, Side } from '@/constants/piece';\nimport { Board, Position } from '@/types/board';\nimport { boardReducer } from './board';\nimport { getValidMoves } from './move';\nimport { isEqualPosition } from './position';\n\nexport const checkmate = (board: Board, side: Side): boolean => {\n  // side: side being checkmated\n  let king: Position = [-1, -1];\n  board.forEach((row, rowIdx) => {\n    row.forEach((piece, colIdx) => {\n      if (piece?.side === side && piece?.type === PieceType.KING) {\n        king = [rowIdx, colIdx];\n      }\n    });\n  });\n  return board.some((row, rowIdx) =>\n    row.some((piece, colIdx) => {\n      if (piece?.side !== side) {\n        const validMoves = getValidMoves(board, [rowIdx, colIdx], piece);\n        return validMoves.some(move => isEqualPosition(king, move));\n      }\n      return false;\n    }),\n  );\n};\n\nexport const win = (board: Board, side: Side): boolean =>\n  // side: side being checkmated\n  !board.some((row, rowIdx) =>\n    row.some((piece, colIdx) => {\n      if (piece?.side === side) {\n        const validMoves = getValidMoves(board, [rowIdx, colIdx], piece);\n        return validMoves.some(move => {\n          const newBoard = boardReducer(board, {\n            from: [rowIdx, colIdx],\n            to: move,\n          });\n          return !checkmate(newBoard, side);\n        });\n      }\n      return false;\n    }),\n  );\n","import React, { useEffect, useMemo, useState } from 'react';\nimport cx from 'classnames';\nimport { Position, Board, MoveHistory } from '@/types/board';\nimport { boardReducer, initBoard } from '@/utils/board';\nimport { Side } from '@/constants/piece';\nimport BoardItem from '@/components/board-item';\nimport { isEqualPosition } from '@/utils/position';\nimport { Size } from '@/constants/board';\nimport { getValidMoves } from '@/utils/move';\nimport { checkmate, win } from '@/utils/game';\n\nimport './index.less';\n\ninterface Props {\n  activePiece: Position | null;\n  setActivePiece: React.Dispatch<React.SetStateAction<Position | null>>;\n}\n\nconst initialBoard = initBoard();\n\nconst CCBoard: React.FC<Props> = props => {\n  const { activePiece, setActivePiece } = props;\n\n  const [board, setBoard] = useState<Board>(initialBoard);\n  const [activeSide, setActiveSide] = useState<Side>(Side.RED);\n  const [moveHistory, setMoveHistroy] = useState<MoveHistory>([]);\n  const [isCheckmate, setIsCheckmate] = useState<boolean>(false);\n\n  const removeActivePiece = () => {\n    if (activePiece) {\n      setActivePiece(null);\n    }\n  };\n\n  const validMoves = useMemo(\n    () =>\n      activePiece\n        ? getValidMoves(\n            board,\n            activePiece,\n            board[activePiece[0]][activePiece[1]],\n          )\n        : [],\n    [JSON.stringify(activePiece)],\n  );\n\n  const isValidMove = (rowIdx: number, colIdx: number) =>\n    validMoves.some(\n      validMove => validMove[0] === rowIdx && validMove[1] === colIdx,\n    );\n\n  const handleMove = (rowIdx: number, colIdx: number) => {\n    if (activePiece) {\n      const to: Position = [rowIdx, colIdx];\n      const newBoard = boardReducer(board, { from: activePiece, to });\n      if (checkmate(newBoard, activeSide)) {\n        alert('不能送将');\n        return;\n      }\n      setBoard(newBoard);\n      setMoveHistroy([\n        ...moveHistory,\n        {\n          side: activeSide,\n          from: activePiece,\n          to,\n        },\n      ]);\n      removeActivePiece();\n      setActiveSide(side => (side === Side.BLACK ? Side.RED : Side.BLACK));\n    }\n  };\n\n  const reset = () => {\n    setBoard(initialBoard);\n    setActivePiece(null);\n    setActiveSide(Side.RED);\n    setMoveHistroy([]);\n    setIsCheckmate(false);\n  };\n\n  useEffect(() => {\n    if (win(board, activeSide)) {\n      alert(`${activeSide === Side.RED ? 'black' : 'red'} win`);\n      reset();\n    } else if (checkmate(board, activeSide)) {\n      setIsCheckmate(true);\n      setTimeout(() => {\n        setIsCheckmate(false);\n      }, 1000);\n    }\n  }, [board]);\n\n  return (\n    <div className=\"board\">\n      <div className=\"board__background\" />\n      <div className=\"board__grid\">\n        {board.map((row, rowIdx) =>\n          row.map((item, colIdx) => (\n            <BoardItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={rowIdx * Size.ROW + colIdx}\n              pieceInfo={item}\n              active={\n                !!activePiece && isEqualPosition(activePiece, [rowIdx, colIdx])\n              }\n              validMove={isValidMove(rowIdx, colIdx)}\n              highlight={\n                moveHistory.length > 0 &&\n                (isEqualPosition(moveHistory[moveHistory.length - 1].from, [\n                  rowIdx,\n                  colIdx,\n                ]) ||\n                  isEqualPosition(moveHistory[moveHistory.length - 1].to, [\n                    rowIdx,\n                    colIdx,\n                  ]))\n                  ? moveHistory[moveHistory.length - 1].side\n                  : null\n              }\n              onClick={() => {\n                if (isValidMove(rowIdx, colIdx)) {\n                  handleMove(rowIdx, colIdx);\n                } else if (item?.side === activeSide) {\n                  if (\n                    !(\n                      activePiece &&\n                      isEqualPosition(activePiece, [rowIdx, colIdx])\n                    )\n                  ) {\n                    setActivePiece([rowIdx, colIdx]);\n                  }\n                } else {\n                  removeActivePiece();\n                }\n              }}\n            />\n          )),\n        )}\n      </div>\n      <div\n        className={cx('board__checkmate', {\n          'board__checkmate--active': isCheckmate,\n        })}\n      />\n    </div>\n  );\n};\n\nexport default CCBoard;\n","import React, { useState } from 'react';\nimport type { Position } from '@/types/board';\nimport CCBoard from './components/board';\n\nimport './app.less';\n\nconst App: React.FC<Record<string, never>> = () => {\n  console.log('rerender');\n  // const [board, updateBoard] = useReducer<BoardReducer>(\n  //   boardReducer,\n  //   initialBoard,\n  // );\n  const [activePiece, setActivePiece] = useState<Position | null>(null);\n\n  const removeActivePiece = () => {\n    if (activePiece) {\n      setActivePiece(null);\n    }\n  };\n\n  return (\n    <div className=\"app\" onClick={removeActivePiece}>\n      <CCBoard activePiece={activePiece} setActivePiece={setActivePiece} />{' '}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}